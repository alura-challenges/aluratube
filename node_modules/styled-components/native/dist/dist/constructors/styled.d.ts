/// <reference types="react" />
import { WebTarget } from '../types';
import { WebStyled } from './constructWithOptions';
declare const styled: (<Target extends WebTarget>(tag: Target) => {
    <Props = unknown, Statics = unknown>(initialStyles: import("../types").Styles<Props>, ...interpolations: import("../types").Interpolation<Props>[]): import("../types").IStyledComponent<Target, Props> & Statics;
    attrs(attrs: import("../types").Attrs<unknown>): any;
    withConfig(config: import("../types").StyledOptions<unknown>): any;
}) & {
    a: WebStyled<"a", import("react").DetailedHTMLProps<import("react").AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>, unknown>;
    abbr: WebStyled<"abbr", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    address: WebStyled<"address", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    area: WebStyled<"area", import("react").DetailedHTMLProps<import("react").AreaHTMLAttributes<HTMLAreaElement>, HTMLAreaElement>, unknown>;
    article: WebStyled<"article", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    aside: WebStyled<"aside", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    audio: WebStyled<"audio", import("react").DetailedHTMLProps<import("react").AudioHTMLAttributes<HTMLAudioElement>, HTMLAudioElement>, unknown>;
    b: WebStyled<"b", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    base: WebStyled<"base", import("react").DetailedHTMLProps<import("react").BaseHTMLAttributes<HTMLBaseElement>, HTMLBaseElement>, unknown>;
    bdi: WebStyled<"bdi", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    bdo: WebStyled<"bdo", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    big: WebStyled<"big", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    blockquote: WebStyled<"blockquote", import("react").DetailedHTMLProps<import("react").BlockquoteHTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    body: WebStyled<"body", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLBodyElement>, HTMLBodyElement>, unknown>;
    br: WebStyled<"br", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLBRElement>, HTMLBRElement>, unknown>;
    button: WebStyled<"button", import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, unknown>;
    canvas: WebStyled<"canvas", import("react").DetailedHTMLProps<import("react").CanvasHTMLAttributes<HTMLCanvasElement>, HTMLCanvasElement>, unknown>;
    caption: WebStyled<"caption", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    cite: WebStyled<"cite", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    code: WebStyled<"code", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    col: WebStyled<"col", import("react").DetailedHTMLProps<import("react").ColHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>, unknown>;
    colgroup: WebStyled<"colgroup", import("react").DetailedHTMLProps<import("react").ColgroupHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>, unknown>;
    data: WebStyled<"data", import("react").DetailedHTMLProps<import("react").DataHTMLAttributes<HTMLDataElement>, HTMLDataElement>, unknown>;
    datalist: WebStyled<"datalist", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDataListElement>, HTMLDataListElement>, unknown>;
    dd: WebStyled<"dd", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    del: WebStyled<"del", import("react").DetailedHTMLProps<import("react").DelHTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    details: WebStyled<"details", import("react").DetailedHTMLProps<import("react").DetailsHTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    dfn: WebStyled<"dfn", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    dialog: WebStyled<"dialog", import("react").DetailedHTMLProps<import("react").DialogHTMLAttributes<HTMLDialogElement>, HTMLDialogElement>, unknown>;
    div: WebStyled<"div", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, unknown>;
    dl: WebStyled<"dl", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDListElement>, HTMLDListElement>, unknown>;
    dt: WebStyled<"dt", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    em: WebStyled<"em", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    embed: WebStyled<"embed", import("react").DetailedHTMLProps<import("react").EmbedHTMLAttributes<HTMLEmbedElement>, HTMLEmbedElement>, unknown>;
    fieldset: WebStyled<"fieldset", import("react").DetailedHTMLProps<import("react").FieldsetHTMLAttributes<HTMLFieldSetElement>, HTMLFieldSetElement>, unknown>;
    figcaption: WebStyled<"figcaption", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    figure: WebStyled<"figure", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    footer: WebStyled<"footer", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    form: WebStyled<"form", import("react").DetailedHTMLProps<import("react").FormHTMLAttributes<HTMLFormElement>, HTMLFormElement>, unknown>;
    h1: WebStyled<"h1", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>, unknown>;
    h2: WebStyled<"h2", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>, unknown>;
    h3: WebStyled<"h3", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>, unknown>;
    h4: WebStyled<"h4", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>, unknown>;
    h5: WebStyled<"h5", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>, unknown>;
    h6: WebStyled<"h6", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>, unknown>;
    head: WebStyled<"head", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLHeadElement>, HTMLHeadElement>, unknown>;
    header: WebStyled<"header", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    hgroup: WebStyled<"hgroup", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    hr: WebStyled<"hr", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLHRElement>, HTMLHRElement>, unknown>;
    html: WebStyled<"html", import("react").DetailedHTMLProps<import("react").HtmlHTMLAttributes<HTMLHtmlElement>, HTMLHtmlElement>, unknown>;
    i: WebStyled<"i", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    iframe: WebStyled<"iframe", import("react").DetailedHTMLProps<import("react").IframeHTMLAttributes<HTMLIFrameElement>, HTMLIFrameElement>, unknown>;
    img: WebStyled<"img", import("react").DetailedHTMLProps<import("react").ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>, unknown>;
    input: WebStyled<"input", import("react").DetailedHTMLProps<import("react").InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, unknown>;
    ins: WebStyled<"ins", import("react").DetailedHTMLProps<import("react").InsHTMLAttributes<HTMLModElement>, HTMLModElement>, unknown>;
    kbd: WebStyled<"kbd", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    keygen: WebStyled<"keygen", import("react").DetailedHTMLProps<import("react").KeygenHTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    label: WebStyled<"label", import("react").DetailedHTMLProps<import("react").LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>, unknown>;
    legend: WebStyled<"legend", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLLegendElement>, HTMLLegendElement>, unknown>;
    li: WebStyled<"li", import("react").DetailedHTMLProps<import("react").LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>, unknown>;
    link: WebStyled<"link", import("react").DetailedHTMLProps<import("react").LinkHTMLAttributes<HTMLLinkElement>, HTMLLinkElement>, unknown>;
    main: WebStyled<"main", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    map: WebStyled<"map", import("react").DetailedHTMLProps<import("react").MapHTMLAttributes<HTMLMapElement>, HTMLMapElement>, unknown>;
    mark: WebStyled<"mark", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    menu: WebStyled<"menu", import("react").DetailedHTMLProps<import("react").MenuHTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    menuitem: WebStyled<"menuitem", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    meta: WebStyled<"meta", import("react").DetailedHTMLProps<import("react").MetaHTMLAttributes<HTMLMetaElement>, HTMLMetaElement>, unknown>;
    meter: WebStyled<"meter", import("react").DetailedHTMLProps<import("react").MeterHTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    nav: WebStyled<"nav", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    noindex: WebStyled<"noindex", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    noscript: WebStyled<"noscript", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    object: WebStyled<"object", import("react").DetailedHTMLProps<import("react").ObjectHTMLAttributes<HTMLObjectElement>, HTMLObjectElement>, unknown>;
    ol: WebStyled<"ol", import("react").DetailedHTMLProps<import("react").OlHTMLAttributes<HTMLOListElement>, HTMLOListElement>, unknown>;
    optgroup: WebStyled<"optgroup", import("react").DetailedHTMLProps<import("react").OptgroupHTMLAttributes<HTMLOptGroupElement>, HTMLOptGroupElement>, unknown>;
    option: WebStyled<"option", import("react").DetailedHTMLProps<import("react").OptionHTMLAttributes<HTMLOptionElement>, HTMLOptionElement>, unknown>;
    output: WebStyled<"output", import("react").DetailedHTMLProps<import("react").OutputHTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    p: WebStyled<"p", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>, unknown>;
    param: WebStyled<"param", import("react").DetailedHTMLProps<import("react").ParamHTMLAttributes<HTMLParamElement>, HTMLParamElement>, unknown>;
    picture: WebStyled<"picture", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    pre: WebStyled<"pre", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLPreElement>, HTMLPreElement>, unknown>;
    progress: WebStyled<"progress", import("react").DetailedHTMLProps<import("react").ProgressHTMLAttributes<HTMLProgressElement>, HTMLProgressElement>, unknown>;
    q: WebStyled<"q", import("react").DetailedHTMLProps<import("react").QuoteHTMLAttributes<HTMLQuoteElement>, HTMLQuoteElement>, unknown>;
    rp: WebStyled<"rp", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    rt: WebStyled<"rt", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    ruby: WebStyled<"ruby", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    s: WebStyled<"s", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    samp: WebStyled<"samp", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    slot: WebStyled<"slot", import("react").DetailedHTMLProps<import("react").SlotHTMLAttributes<HTMLSlotElement>, HTMLSlotElement>, unknown>;
    script: WebStyled<"script", import("react").DetailedHTMLProps<import("react").ScriptHTMLAttributes<HTMLScriptElement>, HTMLScriptElement>, unknown>;
    section: WebStyled<"section", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    select: WebStyled<"select", import("react").DetailedHTMLProps<import("react").SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>, unknown>;
    small: WebStyled<"small", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    source: WebStyled<"source", import("react").DetailedHTMLProps<import("react").SourceHTMLAttributes<HTMLSourceElement>, HTMLSourceElement>, unknown>;
    span: WebStyled<"span", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, unknown>;
    strong: WebStyled<"strong", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    style: WebStyled<"style", import("react").DetailedHTMLProps<import("react").StyleHTMLAttributes<HTMLStyleElement>, HTMLStyleElement>, unknown>;
    sub: WebStyled<"sub", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    summary: WebStyled<"summary", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    sup: WebStyled<"sup", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    table: WebStyled<"table", import("react").DetailedHTMLProps<import("react").TableHTMLAttributes<HTMLTableElement>, HTMLTableElement>, unknown>;
    template: WebStyled<"template", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLTemplateElement>, HTMLTemplateElement>, unknown>;
    tbody: WebStyled<"tbody", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>, unknown>;
    td: WebStyled<"td", import("react").DetailedHTMLProps<import("react").TdHTMLAttributes<HTMLTableDataCellElement>, HTMLTableDataCellElement>, unknown>;
    textarea: WebStyled<"textarea", import("react").DetailedHTMLProps<import("react").TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>, unknown>;
    tfoot: WebStyled<"tfoot", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>, unknown>;
    th: WebStyled<"th", import("react").DetailedHTMLProps<import("react").ThHTMLAttributes<HTMLTableHeaderCellElement>, HTMLTableHeaderCellElement>, unknown>;
    thead: WebStyled<"thead", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>, unknown>;
    time: WebStyled<"time", import("react").DetailedHTMLProps<import("react").TimeHTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    title: WebStyled<"title", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLTitleElement>, HTMLTitleElement>, unknown>;
    tr: WebStyled<"tr", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLTableRowElement>, HTMLTableRowElement>, unknown>;
    track: WebStyled<"track", import("react").DetailedHTMLProps<import("react").TrackHTMLAttributes<HTMLTrackElement>, HTMLTrackElement>, unknown>;
    u: WebStyled<"u", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    ul: WebStyled<"ul", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLUListElement>, HTMLUListElement>, unknown>;
    var: WebStyled<"var", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    video: WebStyled<"video", import("react").DetailedHTMLProps<import("react").VideoHTMLAttributes<HTMLVideoElement>, HTMLVideoElement>, unknown>;
    wbr: WebStyled<"wbr", import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, unknown>;
    webview: WebStyled<"webview", import("react").DetailedHTMLProps<import("react").WebViewHTMLAttributes<HTMLWebViewElement>, HTMLWebViewElement>, unknown>;
    svg: WebStyled<"svg", import("react").SVGProps<SVGSVGElement>, unknown>;
    animate: WebStyled<"animate", import("react").SVGProps<SVGElement>, unknown>;
    animateMotion: WebStyled<"animateMotion", import("react").SVGProps<SVGElement>, unknown>;
    animateTransform: WebStyled<"animateTransform", import("react").SVGProps<SVGElement>, unknown>;
    circle: WebStyled<"circle", import("react").SVGProps<SVGCircleElement>, unknown>;
    clipPath: WebStyled<"clipPath", import("react").SVGProps<SVGClipPathElement>, unknown>;
    defs: WebStyled<"defs", import("react").SVGProps<SVGDefsElement>, unknown>;
    desc: WebStyled<"desc", import("react").SVGProps<SVGDescElement>, unknown>;
    ellipse: WebStyled<"ellipse", import("react").SVGProps<SVGEllipseElement>, unknown>;
    feBlend: WebStyled<"feBlend", import("react").SVGProps<SVGFEBlendElement>, unknown>;
    feColorMatrix: WebStyled<"feColorMatrix", import("react").SVGProps<SVGFEColorMatrixElement>, unknown>;
    feComponentTransfer: WebStyled<"feComponentTransfer", import("react").SVGProps<SVGFEComponentTransferElement>, unknown>;
    feComposite: WebStyled<"feComposite", import("react").SVGProps<SVGFECompositeElement>, unknown>;
    feConvolveMatrix: WebStyled<"feConvolveMatrix", import("react").SVGProps<SVGFEConvolveMatrixElement>, unknown>;
    feDiffuseLighting: WebStyled<"feDiffuseLighting", import("react").SVGProps<SVGFEDiffuseLightingElement>, unknown>;
    feDisplacementMap: WebStyled<"feDisplacementMap", import("react").SVGProps<SVGFEDisplacementMapElement>, unknown>;
    feDistantLight: WebStyled<"feDistantLight", import("react").SVGProps<SVGFEDistantLightElement>, unknown>;
    feDropShadow: WebStyled<"feDropShadow", import("react").SVGProps<SVGFEDropShadowElement>, unknown>;
    feFlood: WebStyled<"feFlood", import("react").SVGProps<SVGFEFloodElement>, unknown>;
    feFuncA: WebStyled<"feFuncA", import("react").SVGProps<SVGFEFuncAElement>, unknown>;
    feFuncB: WebStyled<"feFuncB", import("react").SVGProps<SVGFEFuncBElement>, unknown>;
    feFuncG: WebStyled<"feFuncG", import("react").SVGProps<SVGFEFuncGElement>, unknown>;
    feFuncR: WebStyled<"feFuncR", import("react").SVGProps<SVGFEFuncRElement>, unknown>;
    feGaussianBlur: WebStyled<"feGaussianBlur", import("react").SVGProps<SVGFEGaussianBlurElement>, unknown>;
    feImage: WebStyled<"feImage", import("react").SVGProps<SVGFEImageElement>, unknown>;
    feMerge: WebStyled<"feMerge", import("react").SVGProps<SVGFEMergeElement>, unknown>;
    feMergeNode: WebStyled<"feMergeNode", import("react").SVGProps<SVGFEMergeNodeElement>, unknown>;
    feMorphology: WebStyled<"feMorphology", import("react").SVGProps<SVGFEMorphologyElement>, unknown>;
    feOffset: WebStyled<"feOffset", import("react").SVGProps<SVGFEOffsetElement>, unknown>;
    fePointLight: WebStyled<"fePointLight", import("react").SVGProps<SVGFEPointLightElement>, unknown>;
    feSpecularLighting: WebStyled<"feSpecularLighting", import("react").SVGProps<SVGFESpecularLightingElement>, unknown>;
    feSpotLight: WebStyled<"feSpotLight", import("react").SVGProps<SVGFESpotLightElement>, unknown>;
    feTile: WebStyled<"feTile", import("react").SVGProps<SVGFETileElement>, unknown>;
    feTurbulence: WebStyled<"feTurbulence", import("react").SVGProps<SVGFETurbulenceElement>, unknown>;
    filter: WebStyled<"filter", import("react").SVGProps<SVGFilterElement>, unknown>;
    foreignObject: WebStyled<"foreignObject", import("react").SVGProps<SVGForeignObjectElement>, unknown>;
    g: WebStyled<"g", import("react").SVGProps<SVGGElement>, unknown>;
    image: WebStyled<"image", import("react").SVGProps<SVGImageElement>, unknown>;
    line: WebStyled<"line", import("react").SVGProps<SVGLineElement>, unknown>;
    linearGradient: WebStyled<"linearGradient", import("react").SVGProps<SVGLinearGradientElement>, unknown>;
    marker: WebStyled<"marker", import("react").SVGProps<SVGMarkerElement>, unknown>;
    mask: WebStyled<"mask", import("react").SVGProps<SVGMaskElement>, unknown>;
    metadata: WebStyled<"metadata", import("react").SVGProps<SVGMetadataElement>, unknown>;
    mpath: WebStyled<"mpath", import("react").SVGProps<SVGElement>, unknown>;
    path: WebStyled<"path", import("react").SVGProps<SVGPathElement>, unknown>;
    pattern: WebStyled<"pattern", import("react").SVGProps<SVGPatternElement>, unknown>;
    polygon: WebStyled<"polygon", import("react").SVGProps<SVGPolygonElement>, unknown>;
    polyline: WebStyled<"polyline", import("react").SVGProps<SVGPolylineElement>, unknown>;
    radialGradient: WebStyled<"radialGradient", import("react").SVGProps<SVGRadialGradientElement>, unknown>;
    rect: WebStyled<"rect", import("react").SVGProps<SVGRectElement>, unknown>;
    stop: WebStyled<"stop", import("react").SVGProps<SVGStopElement>, unknown>;
    switch: WebStyled<"switch", import("react").SVGProps<SVGSwitchElement>, unknown>;
    symbol: WebStyled<"symbol", import("react").SVGProps<SVGSymbolElement>, unknown>;
    text: WebStyled<"text", import("react").SVGProps<SVGTextElement>, unknown>;
    textPath: WebStyled<"textPath", import("react").SVGProps<SVGTextPathElement>, unknown>;
    tspan: WebStyled<"tspan", import("react").SVGProps<SVGTSpanElement>, unknown>;
    use: WebStyled<"use", import("react").SVGProps<SVGUseElement>, unknown>;
    view: WebStyled<"view", import("react").SVGProps<SVGViewElement>, unknown>;
};
export default styled;
//# sourceMappingURL=styled.d.ts.map